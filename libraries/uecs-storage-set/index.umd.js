!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).uECS={})}(this,(function(e){"use strict";class t{constructor(e,t){this.view=function(e,t){const i=t.length;let s="";const o=[];for(let e=0;e<i;++e){const i=t[e].name,r=`${n.storage}${i}`;s+=`const ${r} = ${n.world}.components["${i}"];\n`,o.push(r)}let r="";r+="let min = Infinity;\n",r+="let storage = undefined;\n";for(let e=0;e<i;++e)r+=`if (${o[e]}.entities.size < min) {\n    storage = ${o[e]};\n    min = ${o[e]}.entities.size;\n}\n`;r+="if (storage === undefined) return;\n",r+=`const ${n.entities} = storage.entities.keys();\n`;let c="";const l=[];for(let e=0;e<i;++e){const i=`${t[e].name}${e}`;c+=`const ${i} = ${o[e]}[${n.entity}];\n`,l.push(i)}let a="if (";for(let e=0;e<i;++e)a+=`${l[e]} === undefined`,e!==i-1&&(a+=" || ");a+=") continue;\n";const h=s+`return function(${n.callback}) {\n`+r+`for (const ${n.entity} of ${n.entities}) {\n`+c+a+`if (${n.callback}(${n.entity},${function(e,t){let n="";const i=e.length-1;for(let s=0;s<i;++s)n+=e[s]+t;return n+=e[i],n}(l,",")}) === false) return;\n}\n}`;return new Function(n.world,h)(e)}(e,t)}each(e){this.view(e)}}const n={world:"_$WORLD",entity:"_$ENTITY",entities:"_$ENTITIES",callback:"_$CALLBACK",storage:"_$STORAGE"};class i{static for(e){const t=e.toString();let n=i.cache[t];return null==n&&(n=Object.defineProperty(class{},"name",{value:"T$"+t}),i.cache[t]=n),n}}i.cache={},e.Null=-1,e.Tag=i,e.World=class{constructor(){this.entitySequence=0,this.entities=new Set,this.components={},this.views={}}create(...e){const t=this.entitySequence++;this.entities.add(t);for(let n=0,i=e.length;n<i;++n)this.emplace(t,e[n]);return t}insert(e,...t){e>=this.entitySequence&&(this.entitySequence=e+1),this.entities.add(e);for(let n=0,i=t.length;n<i;++n)this.emplace(e,t[n]);return e}exists(e){return this.entities.has(e)}destroy(e){this.entities.delete(e);for(const t in this.components){const n=this.components[t],i=n[e];void 0!==i&&void 0!==i.free&&i.free(),delete n[e],n.entities.delete(e)}}get(e,t){const n=t.name,i=this.components[n];if(void 0!==i)return i[e]}has(e,t){const n=t.name,i=this.components[n];return null==i?void 0:i.entities.has(e)}emplace(e,t){var n;const i=null!==(n=t.name)&&void 0!==n?n:t.constructor.name;if(!this.entities.has(e))throw new Error(`Cannot set component "${i}" for dead entity ID ${e}`);null==this.components[i]&&(this.components[i]={entities:new Set}),this.components[i][e]=t,this.components[i].entities.add(e)}remove(e,t){const n=t.name,i=this.components[n];if(void 0===i)return;const s=i[e];return delete i[e],i.entities.delete(e),s}size(){return this.entities.size}view(...e){let n="";for(let t=0;t<e.length;++t)n+=e[t].name;if(!(n in this.views)){for(let t=0;t<e.length;++t)void 0===this.components[e[t].name]&&(this.components[e[t].name]={entities:new Set});this.views[n]=new t(this,e)}return this.views[n]}clear(){for(const e of this.entities.values())this.destroy(e)}all(){return this.entities.values()}},Object.defineProperty(e,"__esModule",{value:!0})}));
