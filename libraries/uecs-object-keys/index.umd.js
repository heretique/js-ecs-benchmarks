!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).uECS={})}(this,(function(e){"use strict";class t{constructor(e,t){this.view=function(e,t){const r=t.length;let l=`const ${c} = []\n`;const h=[];for(let e=0;e<r;++e){const s=t[e].name,i=`${c}${s}`;l+=`const ${i} = ${n}.components["${s}"];\n${c}.push(${i});\n`,h.push(i)}let u="";const f=[];for(let e=0;e<r;++e){const n=`${t[e].name}${e}`;u+=`const ${n} = ${h[e]}[${s}];\n`,f.push(n)}let a="if (";for(let e=0;e<r;++e)a+=`${f[e]} === undefined`,e!==r-1&&(a+=" || ");a+=") continue;\n";const d=l+`return function(${o}) {\nlet index = 0;\nlet min = Math.Infinity;\n`+`for (let i = 0;  i < ${c}.length; i++) {\n`+`const length = ${c}[i].length;\nif (length < min) { min = length; index = i;}\n}\n`+`const ${i} = Object.keys(${c}[index]);\n`+`for (const ${s} of ${i}) {\n`+u+a+`if (${o}(${s},${function(e,t){let n="";const s=e.length-1;for(let i=0;i<s;++i)n+=e[i]+t;return n+=e[s],n}(f,",")}) === false) return;\n}\n}`;return new Function(n,d)(e)}(e,t)}each(e){this.view(e)}}const n="_$WORLD",s="_$ENTITY",i="_$ENTITIES",o="_$CALLBACK",c="_$STORAGE";class r{static for(e){const t=e.toString();let n=r.cache[t];return null==n&&(n=Object.defineProperty(class{},"name",{value:"T$"+t}),r.cache[t]=n),n}}r.cache={},e.Null=-1,e.Tag=r,e.World=class{constructor(){this.entitySequence=0,this.entities=new Set,this.components={},this.views={}}create(...e){const t=this.entitySequence++;this.entities.add(t);for(let n=0,s=e.length;n<s;++n)this.emplace(t,e[n]);return t}insert(e,...t){e>=this.entitySequence&&(this.entitySequence=e+1),this.entities.add(e);for(let n=0,s=t.length;n<s;++n)this.emplace(e,t[n]);return e}exists(e){return this.entities.has(e)}destroy(e){this.entities.delete(e);for(const t in this.components){const n=this.components[t],s=n[e];void 0!==s&&void 0!==s.free&&s.free(),delete n[e]}}get(e,t){const n=t.name,s=this.components[n];if(void 0!==s)return s[e]}has(e,t){const n=t.name,s=this.components[n];return void 0!==s&&void 0!==s[e]}emplace(e,t){var n;const s=null!==(n=t.name)&&void 0!==n?n:t.constructor.name;if(!this.entities.has(e))throw new Error(`Cannot set component "${s}" for dead entity ID ${e}`);null==this.components[s]&&(this.components[s]={}),this.components[s][e]=t}remove(e,t){const n=t.name,s=this.components[n];if(void 0===s)return;const i=s[e];return delete s[e],i}size(){return this.entities.size}view(...e){let n="";for(let t=0;t<e.length;++t)n+=e[t].name;if(!(n in this.views)){for(let t=0;t<e.length;++t)void 0===this.components[e[t].name]&&(this.components[e[t].name]={});this.views[n]=new t(this,e)}return this.views[n]}clear(){for(const e of this.entities.values())this.destroy(e)}all(){return this.entities.values()}},Object.defineProperty(e,"__esModule",{value:!0})}));
